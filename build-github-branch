import groovy.transform.TupleConstructor

@TupleConstructor()
class BranchOnRepo {
    String repo
    String branch
    String originalBranch = ""
}

def branchesToBuild = [
    new BranchOnRepo('apache/james-project', 'master'),
    new BranchOnRepo('apache/james-project', '3.1.x', '3.1.x'),
    new BranchOnRepo('apache/james-project', '3.2.x', '3.2.x'),
    new BranchOnRepo('apache/james-project', '3.3.x', '3.3.x'),
    new BranchOnRepo('linagora/james-project', 'openpaas-1.2.x', 'openpaas-1.2.x')
]

branchesToBuild.each {
    def branchOnRepo = it
    def repository = 'https://github.com/' + branchOnRepo.repo
   
    job("build ${branchOnRepo.repo} ${branchOnRepo.branch}".replaceAll(/\//, '.')) {
        githubProjectUrl(repository)
        scm {
            git {
                remote {
                    url(repository + '.git')
                }
                branch(branchOnRepo.branch)
            }
        }
        triggers {
            scm('* * * * *') {
                ignorePostCommitHooks(false)
            }
        }
        steps {
            downstreamParameterized {
                trigger('workflow', 'ALWAYS', false,
                    [buildStepFailure: 'FAILURE',
                     failure         : 'FAILURE',
                     unstable        : 'UNSTABLE']) {
                    predefinedProps([repoURL: repository, branch: branchOnRepo.branch, originalBranch: branchOnRepo.originalBranch])
                }
            }
        }
    }
}
